/**
 * Generated by @openapi-codegen
 *
 * @version 0.0.1
 */
export type FirmwareSource = {
  version: string;
  source: string;
  branch?: string;
  official: boolean;
  prerelease: boolean;
  availableBoards: string[];
};

export type FirmwareBoardDefaults = {
  schema: void;
  defaults: BoardDefaults;
};

export type BoardDefaults = {
  values: void;
  editable: string[];
  flashingRules: {
    applicationOffset: number;
    needBootPress: boolean;
    needManualReboot: boolean;
    shouldOnlyUseDefaults: boolean;
  };
};

export type BoardDefaultsQuery = {
  source: string;
  board: string;
  version: string;
};

export type BuildStatusBasic = {
  id: string;
  status:
    | 'QUEUED'
    | 'CREATING_BUILD_FOLDER'
    | 'DOWNLOADING_SOURCE'
    | 'EXTRACTING_SOURCE'
    | 'BUILDING'
    | 'SAVING'
    | 'ERROR';
};

export type BuildStatusDone = {
  id: string;
  status: 'DONE';
  files: {
    filePath: string;
    offset: number;
    isFirmware: boolean;
    firmwareId: string;
  }[];
};

export type BuildFirmwareBody = {
  source: string;
  board: string;
  version: string;
  values: void;
};

export type FirmwareWithFiles = {
  id: string;
  release_id: string;
  status:
    | 'QUEUED'
    | 'CREATING_BUILD_FOLDER'
    | 'DOWNLOADING_SOURCE'
    | 'EXTRACTING_SOURCE'
    | 'BUILDING'
    | 'SAVING'
    | 'DONE'
    | 'ERROR';
  /**
   * @format date-time
   */
  createdAt: string;
  /**
   * @format date-time
   */
  updatedAt: string;
  files: {
    filePath: string;
    offset: number;
    isFirmware: boolean;
    firmwareId: string;
  }[];
};

export type FirmwareBoardDefaultsNullable = {
  schema: void;
  defaults: BoardDefaults;
} | null;
